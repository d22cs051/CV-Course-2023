# -*- coding: utf-8 -*-
"""D22CS051_Q7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UtlGPrIBeZ_jLMlaVSkuW8n8SzDRia5u

### upload files before running the cells
"""

from google.colab import files
u_files = files.upload()

# importing libs
import cv2 as cv
from matplotlib import pyplot as plt
import numpy as np

# taking gradiant of image

img = cv.imread('27_2.png',0)
# binarization
_,img = cv.threshold(img, 127, 255, cv.THRESH_BINARY) 
laplacian = cv.Laplacian(img,cv.CV_64F)
plt.figure(figsize=(10,10))
plt.subplot(1,2,1)
plt.imshow(img,cmap = 'gray')
plt.title('Original')
plt.axis("off")

plt.subplot(1,2,2)
plt.imshow(laplacian,cmap = 'gray')
plt.title('Laplacian')
plt.axis("off")
plt.show()

count_grad_neg,count_grad_pos = 0,0
for i in laplacian:
  for j in range(len(i) - 1):
    if i[j]!=i[j+1]:
      if i[j+1] < 0:
        count_grad_neg += 1
        break
      elif i[j+1] > 0:
        count_grad_pos += 1
        break

if count_grad_neg > count_grad_pos:
  print("TEXT IS ON WHITE BACKGROUD")
elif count_grad_neg < count_grad_pos:
  print("TEXT IS ON BLACK BACKGROUD")
else:
  print("SORRY CAN'T BE DETERMINED")

img = cv.imread('11_1.png',0)
# binarization
_,img = cv.threshold(img, 127, 255, cv.THRESH_BINARY)
laplacian = cv.Laplacian(img,cv.CV_64F)
plt.figure(figsize=(10,10))
plt.subplot(1,2,1)
plt.imshow(img,cmap = 'gray')
plt.title('Original')
plt.axis("off")

plt.subplot(1,2,2)
plt.imshow(laplacian,cmap = 'gray')
plt.title('Laplacian')
plt.axis("off")
plt.show()

count_grad_neg,count_grad_pos = 0,0
for i in laplacian:
  for j in range(len(i) - 1):
    if i[j]!=i[j+1]:
      if i[j+1] < 0:
        count_grad_neg += 1
        break
      elif i[j+1] > 0:
        count_grad_pos += 1
        break

if count_grad_neg > count_grad_pos:
  print("TEXT IS ON WHITE BACKGROUD")
elif count_grad_neg < count_grad_pos:
  print("TEXT IS ON BLACK BACKGROUD")
else:
  print("SORRY CAN'T BE DETERMINED")